Index: local.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## This file must *NOT* be checked into Version Control Systems,\r\n# as it contains information specific to your local configuration.\r\n#\r\n# Location of the SDK. This is only used by Gradle.\r\n# For customization when using a Version Control System, please read the\r\n# header note.\r\n#Tue Mar 02 11:13:29 EST 2021\r\nsdk.dir=C\\:\\\\Users\\\\jrich\\\\AppData\\\\Local\\\\Android\\\\Sdk\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- local.properties	(revision 13a8c5b33c67be4cef01f5e7479a9ca4eebc09d3)
+++ local.properties	(date 1615303485441)
@@ -4,5 +4,5 @@
 # Location of the SDK. This is only used by Gradle.
 # For customization when using a Version Control System, please read the
 # header note.
-#Tue Mar 02 11:13:29 EST 2021
-sdk.dir=C\:\\Users\\jrich\\AppData\\Local\\Android\\Sdk
+#Tue Mar 09 10:09:10 EST 2021
+sdk.dir=C\:\\Users\\de-ni\\AppData\\Local\\Android\\Sdk
Index: app/src/main/java/wsu/group18/thehealthycat/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package wsu.group18.thehealthycat;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = \"EmailPassword\";\r\n    String ConnectioCode;\r\n    private FirebaseAuth mAuth;\r\n    public Cat cat;\r\n    FirebaseDatabase database;\r\n    FirebaseUser user;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        SharedPreferences prefs = getSharedPreferences(\"prefs\", MODE_PRIVATE);\r\n        boolean hasStarted = prefs.getBoolean(\"hasStarted\", true );\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        FirebaseUser currentUser;\r\n        FirebaseUser userFromSettings = (FirebaseUser) getIntent().getSerializableExtra(\"USER\");\r\n        if(userFromSettings != null){\r\n            currentUser = userFromSettings;\r\n            hasStarted = true;\r\n        }\r\n        else {\r\n            currentUser = mAuth.getCurrentUser();\r\n        }\r\n        if(currentUser != null){\r\n            hasStarted=false;\r\n        }\r\n\r\n        cat = new Cat();\r\n\r\n        //The following code executes if returning from the settings activity with saved changes.\r\n        String settingsName = getIntent().getStringExtra(\"CAT_NAME\");\r\n        double settingsTargetWeight = getIntent().getDoubleExtra(\"CAT_TARGET_WEIGHT\", 0.0);\r\n        ArrayList<LocalTime> timeList = (ArrayList<LocalTime>) getIntent().getSerializableExtra(\"TIME_LIST\");\r\n        boolean shouldShowStartup = true;\r\n        if(settingsName != null){\r\n            cat.setName(settingsName);\r\n            shouldShowStartup = false;\r\n        }\r\n        if(settingsTargetWeight != 0.0){\r\n            cat.setTargetWeightLBS(settingsTargetWeight);\r\n        }\r\n        if(timeList != null){\r\n            cat.setFeedingTimes(timeList);\r\n            Toast.makeText(MainActivity.this,\"times\"+ timeList.toString(),Toast.LENGTH_LONG).show();\r\n        }\r\n        //shouldShowStartup is true if we're starting up the first time, if we return from the settingsActivity, we don't want to run this again.\r\n        if (shouldShowStartup) {\r\n            showStartupDialog();\r\n            cat.setUser(user);\r\n        }\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        DatabaseReference myRef = database.getReference(\"message\");\r\n\r\n        myRef.setValue(\"test three!\");\r\n    }\r\n\r\n    public void OpenChartActivity(View v){\r\n        if(cat!=null){\r\n            cat.setUser(user);\r\n            cat.updateFirebase(ConnectioCode);\r\n        }\r\n        Intent intent = new Intent(this, ChartActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void OpenSettingsActivity(View v){\r\n        Intent intent = new Intent(this, SettingsActivity.class);\r\n        intent.putExtra(\"CAT_NAME\", cat.getName());\r\n        intent.putExtra(\"CAT_TARGET_WEIGHT\", cat.getTargetWeightLBS());\r\n        intent.putExtra(\"CAT_CURRENT_WEIGHT\", cat.getCurrentWeightLBS());\r\n        intent.putExtra(\"CAT_FEEDING_TIMES\", (ArrayList) cat.getFeedingTimes());\r\n        intent.putExtra(\"CAT_FEEDING_FREQ\", String.valueOf(cat.getFeedingTimes().size()));\r\n        intent.putExtra(\"USER\", user);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void OpenCatInfoActivity(View v){\r\n        Intent intent = new Intent(this, CatInfo.class);\r\n        intent.putExtra(\"CAT_NAME\", cat.getName());\r\n        intent.putExtra(\"CAT_TARGET_WEIGHT\", cat.getTargetWeightLBS());\r\n        intent.putExtra(\"CAT_CURRENT_WEIGHT\", cat.getCurrentWeightLBS());\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void showStartupDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        LayoutInflater inflater = this.getLayoutInflater();\r\n        View startupDialogView = inflater.inflate(R.layout.startup_dialog, null);\r\n        builder.setTitle(\"Welcome to the Healthy Cat!\");\r\n\r\n        final EditText catNameInput = (EditText) startupDialogView.findViewById(R.id.cat_name);\r\n        final EditText targetWeightInput = (EditText) startupDialogView.findViewById(R.id.target_weight);\r\n        final EditText emailText = (EditText) startupDialogView.findViewById(R.id.editTextEmailAddress);\r\n        final EditText ConnectionCode = (EditText) startupDialogView.findViewById(R.id.connectionPassword);\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            ConnectionCode.setTooltipText(\"Find this code attached to your Healthy Cat Feeder\");\r\n        }\r\n\r\n        builder.setView(startupDialogView);\r\n\r\n\r\n        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                // cat = new Cat(catNameInput.getText().toString(), Double.parseDouble(targetWeightInput.getText().toString()), 0.0, new ArrayList());\r\n\r\n                cat.setName(catNameInput.getText().toString());\r\n                cat.setTargetWeightLBS(Double.parseDouble(targetWeightInput.getText().toString()));\r\n                String email = emailText.getText().toString();\r\n                String password = ConnectionCode.getText().toString();\r\n                makeNewUser(email,password);\r\n                Toast.makeText(MainActivity.this, \"email is\" + email + \"pass is \" + password, Toast.LENGTH_LONG).show();\r\n                // [START create_user_with_email]\r\n\r\n\r\n\r\n            }\r\n        }).setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.cancel();\r\n            }\r\n        });\r\n\r\n        builder.show();\r\n\r\n        SharedPreferences prefs = getSharedPreferences(\"prefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = prefs.edit();\r\n        editor.putBoolean(\"hasStarted\", false);\r\n        editor.apply();\r\n\r\n    }\r\n\r\n    private void makeNewUser(String email, String password) {\r\n        ConnectioCode=password;\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"createUserWithEmail:success\");\r\n                            user = mAuth.getCurrentUser();\r\n                            Toast.makeText(MainActivity.this, \"Authentication is ok, \"+user.getUid(),\r\n                                    Toast.LENGTH_SHORT).show();\r\n\r\n                            //updateUI(user);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                            Toast.makeText(MainActivity.this, \"Authentication failed.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                            // updateUI(null);\r\n                        }\r\n\r\n                        // [START_EXCLUDE]\r\n                        // hideProgressBar();\r\n                        // [END_EXCLUDE]\r\n                    }\r\n                });\r\n        // [END create_user_with_email]\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/wsu/group18/thehealthycat/MainActivity.java	(revision 13a8c5b33c67be4cef01f5e7479a9ca4eebc09d3)
+++ app/src/main/java/wsu/group18/thehealthycat/MainActivity.java	(date 1615478487735)
@@ -34,7 +34,7 @@
 public class MainActivity extends AppCompatActivity {
 
     private static final String TAG = "EmailPassword";
-    String ConnectioCode;
+    String ConnectionCode;
     private FirebaseAuth mAuth;
     public Cat cat;
     FirebaseDatabase database;
@@ -94,7 +94,7 @@
     public void OpenChartActivity(View v){
         if(cat!=null){
             cat.setUser(user);
-            cat.updateFirebase(ConnectioCode);
+            cat.updateFirebase(ConnectionCode);
         }
         Intent intent = new Intent(this, ChartActivity.class);
         startActivity(intent);
@@ -169,7 +169,7 @@
     }
 
     private void makeNewUser(String email, String password) {
-        ConnectioCode=password;
+        ConnectionCode=password;
         mAuth.createUserWithEmailAndPassword(email, password)
                 .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                     @Override
