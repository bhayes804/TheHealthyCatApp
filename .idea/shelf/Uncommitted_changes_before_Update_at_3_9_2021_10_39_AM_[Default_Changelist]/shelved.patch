Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"wsu.group18.thehealthycat\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.2'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.2'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 5ee58a7a24c07c23c2362fbdd793965843ce2496)
+++ app/build.gradle	(date 1615303845574)
@@ -6,7 +6,7 @@
 
     defaultConfig {
         applicationId "wsu.group18.thehealthycat"
-        minSdkVersion 16
+        minSdkVersion 26
         targetSdkVersion 30
         versionCode 1
         versionName "1.0"
Index: app/src/main/java/wsu/group18/thehealthycat/ChartActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package wsu.group18.thehealthycat;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.graphics.Color;\r\nimport android.graphics.DashPathEffect;\r\nimport android.graphics.drawable.Drawable;\r\n//import android.support.v7.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.github.mikephil.charting.charts.LineChart;\r\nimport com.github.mikephil.charting.components.LimitLine;\r\nimport com.github.mikephil.charting.components.XAxis;\r\nimport com.github.mikephil.charting.components.YAxis;\r\nimport com.github.mikephil.charting.data.Entry;\r\nimport com.github.mikephil.charting.data.LineData;\r\nimport com.github.mikephil.charting.data.LineDataSet;\r\nimport com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\r\nimport com.github.mikephil.charting.utils.Utils;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChartActivity extends AppCompatActivity {\r\n    private LineChart mChart;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_chart);\r\n        mChart = findViewById(R.id.chart);\r\n        mChart.setTouchEnabled(true);\r\n        mChart.setPinchZoom(true);\r\n        MyMarkerView mv = new MyMarkerView(getApplicationContext(), R.layout.custom_marker_view);\r\n        mv.setChartView(mChart);\r\n        mChart.setMarker(mv);\r\n        renderData();\r\n    }\r\n\r\n    ArrayList<Entry> weights = new ArrayList<>();\r\n    float targetWeight;\r\n\r\n    public void renderData() {\r\n        setData();\r\n        LimitLine llXAxis = new LimitLine(10f, \"Index 10\");\r\n        llXAxis.setLineWidth(4f);\r\n        llXAxis.enableDashedLine(10f, 10f, 0f);\r\n        llXAxis.setLabelPosition(LimitLine.LimitLabelPosition.RIGHT_BOTTOM);\r\n        llXAxis.setTextSize(10f);\r\n\r\n        XAxis xAxis = mChart.getXAxis();\r\n        xAxis.enableGridDashedLine(10f, 10f, 0f);\r\n        xAxis.setAxisMaximum((float) weights.size());\r\n        xAxis.setAxisMinimum(0f);\r\n        xAxis.setDrawLimitLinesBehindData(true);\r\n\r\n        LimitLine targetWeightLine = new LimitLine(targetWeight, \"Target Weight\");\r\n        targetWeightLine.setLineWidth(4f);\r\n        targetWeightLine.enableDashedLine(10f, 10f, 0f);\r\n        targetWeightLine.setLabelPosition(LimitLine.LimitLabelPosition.RIGHT_TOP);\r\n        targetWeightLine.setTextSize(10f);\r\n\r\n        YAxis leftAxis = mChart.getAxisLeft();\r\n        leftAxis.removeAllLimitLines();\r\n        leftAxis.addLimitLine(targetWeightLine);\r\n        leftAxis.setAxisMaximum(25f);\r\n        leftAxis.setAxisMinimum(0f);\r\n        leftAxis.enableGridDashedLine(10f, 10f, 0f);\r\n        leftAxis.setDrawZeroLine(false);\r\n        leftAxis.setDrawLimitLinesBehindData(false);\r\n\r\n        mChart.getAxisRight().setEnabled(false);\r\n    }\r\n\r\n    private void setData() {\r\n\r\n        //get data for historic weights\r\n        //manual data entered for now to test chart\r\n        weights.add(new Entry(0, 18.5f));\r\n        weights.add(new Entry(1, 18.3f));\r\n        weights.add(new Entry(2, 18.0f));\r\n        weights.add(new Entry(3, 17.5f));\r\n        weights.add(new Entry(4, 17.8f));\r\n        weights.add(new Entry(5, 16.9f));\r\n        weights.add(new Entry(7, 16.3f));\r\n        weights.add(new Entry(8, 15.8f));\r\n        weights.add(new Entry(9, 15.6f));\r\n        weights.add(new Entry(10, 14.5f));\r\n        weights.add(new Entry(11, 15.6f));\r\n        weights.add(new Entry(12, 14.5f));\r\n\r\n        //get value for target weight\r\n        //manual value for now to test chart\r\n        targetWeight = 12.6f;\r\n\r\n        //create data set of past weights\r\n        LineDataSet weightData;\r\n        if (mChart.getData() != null &&\r\n                mChart.getData().getDataSetCount() > 0) {\r\n            weightData = (LineDataSet) mChart.getData().getDataSetByIndex(0);\r\n            weightData.setValues(weights);\r\n            mChart.getData().notifyDataChanged();\r\n            mChart.notifyDataSetChanged();\r\n        } else {\r\n            weightData = new LineDataSet(weights, \"Past Weights\");\r\n            weightData.setDrawIcons(false);\r\n            weightData.enableDashedLine(10f, 5f, 0f);\r\n            weightData.enableDashedHighlightLine(10f, 5f, 0f);\r\n            weightData.setColor(Color.DKGRAY);\r\n            weightData.setCircleColor(Color.DKGRAY);\r\n            weightData.setLineWidth(1f);\r\n            weightData.setCircleRadius(3f);\r\n            weightData.setDrawCircleHole(false);\r\n            weightData.setValueTextSize(9f);\r\n            weightData.setDrawFilled(true);\r\n            weightData.setFormLineWidth(1f);\r\n            weightData.setFormLineDashEffect(new DashPathEffect(new float[]{10f, 5f}, 0f));\r\n            weightData.setFormSize(15.f);\r\n\r\n            if (Utils.getSDKInt() >= 18) {\r\n                Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_blue);\r\n                weightData.setFillDrawable(drawable);\r\n            } else {\r\n                weightData.setFillColor(Color.DKGRAY);\r\n            }\r\n            ArrayList<ILineDataSet> dataSets = new ArrayList<>();\r\n            dataSets.add(weightData);\r\n            LineData data = new LineData(dataSets);\r\n            mChart.setData(data);\r\n\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/wsu/group18/thehealthycat/ChartActivity.java	(revision 5ee58a7a24c07c23c2362fbdd793965843ce2496)
+++ app/src/main/java/wsu/group18/thehealthycat/ChartActivity.java	(date 1615303845582)
@@ -11,16 +11,26 @@
 import androidx.core.content.ContextCompat;
 
 import com.github.mikephil.charting.charts.LineChart;
+import com.github.mikephil.charting.components.AxisBase;
 import com.github.mikephil.charting.components.LimitLine;
 import com.github.mikephil.charting.components.XAxis;
 import com.github.mikephil.charting.components.YAxis;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.LineData;
 import com.github.mikephil.charting.data.LineDataSet;
+import com.github.mikephil.charting.formatter.IAxisValueFormatter;
 import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;
 import com.github.mikephil.charting.utils.Utils;
 
+import java.time.Instant;
+import java.time.LocalDateTime;
+import java.time.ZoneId;
+import java.time.ZoneOffset;
+import java.text.DateFormat;
+import java.time.ZoneId;
 import java.util.ArrayList;
+import java.util.Date;
+import java.util.Locale;
 
 public class ChartActivity extends AppCompatActivity {
     private LineChart mChart;
@@ -39,7 +49,16 @@
     }
 
     ArrayList<Entry> weights = new ArrayList<>();
-    float targetWeight;
+    ArrayList<HistoricalWeightEvent> historicalWeights = (ArrayList)getIntent().getSerializableExtra("CAT_HISTORICAL_WEIGHTS");
+
+    public void formatWeightsAsEntries(ArrayList<HistoricalWeightEvent> start, ArrayList<Entry> end) {
+        for(HistoricalWeightEvent e : start) {
+            Instant instant = e.Time.atZone(ZoneId.systemDefault()).toInstant();
+            end.add(new Entry(e.Time.atZone(ZoneId.systemDefault()).toEpochSecond(), (float)e.Weight));
+        }
+    }
+
+    float targetWeight =  getIntent().getFloatExtra("CAT_TARGET_WEIGHT", 0.0f);
 
     public void renderData() {
         setData();
@@ -50,6 +69,9 @@
         llXAxis.setTextSize(10f);
 
         XAxis xAxis = mChart.getXAxis();
+        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
+        xAxis.setValueFormatter((new MyXAxisValueFormatter()));
+        xAxis.setLabelCount(3, true);
         xAxis.enableGridDashedLine(10f, 10f, 0f);
         xAxis.setAxisMaximum((float) weights.size());
         xAxis.setAxisMinimum(0f);
@@ -75,23 +97,28 @@
 
     private void setData() {
 
+        Cat cat;
+
         //get data for historic weights
         //manual data entered for now to test chart
-        weights.add(new Entry(0, 18.5f));
-        weights.add(new Entry(1, 18.3f));
-        weights.add(new Entry(2, 18.0f));
-        weights.add(new Entry(3, 17.5f));
-        weights.add(new Entry(4, 17.8f));
-        weights.add(new Entry(5, 16.9f));
-        weights.add(new Entry(7, 16.3f));
-        weights.add(new Entry(8, 15.8f));
-        weights.add(new Entry(9, 15.6f));
-        weights.add(new Entry(10, 14.5f));
-        weights.add(new Entry(11, 15.6f));
-        weights.add(new Entry(12, 14.5f));
+        formatWeightsAsEntries(historicalWeights, weights);
+
+//        weights.add(new Entry(0, 18.5f));
+//        weights.add(new Entry(1, 18.3f));
+//        weights.add(new Entry(2, 18.0f));
+//        weights.add(new Entry(3, 17.5f));
+//        weights.add(new Entry(4, 17.8f));
+//        weights.add(new Entry(5, 16.9f));
+//        weights.add(new Entry(7, 16.3f));
+//        weights.add(new Entry(8, 15.8f));
+//        weights.add(new Entry(9, 15.6f));
+//        weights.add(new Entry(10, 14.5f));
+//        weights.add(new Entry(11, 15.6f));
+//        weights.add(new Entry(12, 14.5f));
 
         //get value for target weight
         //manual value for now to test chart
+
         targetWeight = 12.6f;
 
         //create data set of past weights
@@ -131,4 +158,15 @@
 
         }
     }
+
+    public class MyXAxisValueFormatter implements IAxisValueFormatter {
+
+        @Override
+        public String getFormattedValue(float value, AxisBase axis) {
+            Date timeInMilliseconds = new Date((long)value);
+            DateFormat dateTimeFormat = DateFormat.getDateInstance(DateFormat.MEDIUM, Locale.getDefault());
+
+            return dateTimeFormat.format(timeInMilliseconds);
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/wsu/group18/thehealthycat/MyMarkerView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package wsu.group18.thehealthycat;\r\n\r\nimport android.content.Context;\r\nimport android.widget.TextView;\r\n\r\nimport com.github.mikephil.charting.components.MarkerView;\r\nimport com.github.mikephil.charting.data.CandleEntry;\r\nimport com.github.mikephil.charting.data.Entry;\r\nimport com.github.mikephil.charting.highlight.Highlight;\r\nimport com.github.mikephil.charting.utils.MPPointF;\r\nimport com.github.mikephil.charting.utils.Utils;\r\n\r\n\r\n/**\r\n * Custom implementation of the MarkerView.\r\n *\r\n * @author Philipp Jahoda\r\n */\r\npublic class MyMarkerView extends MarkerView {\r\n\r\n    private TextView tvContent;\r\n\r\n    public MyMarkerView(Context context, int layoutResource) {\r\n        super(context, layoutResource);\r\n\r\n        tvContent = (TextView) findViewById(R.id.tvContent);\r\n    }\r\n\r\n    // callbacks everytime the MarkerView is redrawn, can be used to update the\r\n    // content (user-interface)\r\n    @Override\r\n    public void refreshContent(Entry e, Highlight highlight) {\r\n\r\n        if (e instanceof CandleEntry) {\r\n\r\n            CandleEntry ce = (CandleEntry) e;\r\n\r\n            tvContent.setText(\"\" + Utils.formatNumber(ce.getHigh(), 0, true));\r\n        } else {\r\n\r\n            tvContent.setText(\"\" + Utils.formatNumber(e.getY(), 0, true));\r\n        }\r\n\r\n        super.refreshContent(e, highlight);\r\n    }\r\n\r\n    @Override\r\n    public MPPointF getOffset() {\r\n        return new MPPointF(-(getWidth() / 2), -getHeight());\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/wsu/group18/thehealthycat/MyMarkerView.java	(revision 5ee58a7a24c07c23c2362fbdd793965843ce2496)
+++ app/src/main/java/wsu/group18/thehealthycat/MyMarkerView.java	(date 1615303866141)
@@ -33,12 +33,13 @@
 
         if (e instanceof CandleEntry) {
 
-            CandleEntry ce = (CandleEntry) e;
-
-            tvContent.setText("" + Utils.formatNumber(ce.getHigh(), 0, true));
+//            CandleEntry ce = (CandleEntry) e;
+//
+//            tvContent.setText("" + Utils.formatNumber(ce.getHigh(), 3, true));
         } else {
-
-            tvContent.setText("" + Utils.formatNumber(e.getY(), 0, true));
+            String markerText = "" + e.getY() + "\n" + e.getX();
+                    //"" + Utils.formatNumber(e.getY(), 1, true);
+            tvContent.setText(markerText);
         }
 
         super.refreshContent(e, highlight);
